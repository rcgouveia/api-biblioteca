// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cliente {
  id          Int          @id @default(autoincrement())
  nome        String
  email       String       @unique
  senha       String
  emprestimos Emprestimo[]
  reservas    Reserva[]
  cpf         String       @unique
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@map("clientes")
}

model Bibliotecario {
  id          Int          @id @default(autoincrement())
  nome        String
  email       String       @unique
  senha       String
  emprestimos Emprestimo[]
  reservas    Reserva[]
  cpf         String       @unique
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@map("bibliotecarios")
}

model Livro {
  id          Int          @id @default(autoincrement())
  titulo      String
  descricao   String
  genero      String
  status      Boolean
  quantidade  Int
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  emprestimos Emprestimo[]
  reservas    Reserva[]

  @@map("livros")
}

model Emprestimo {
  id              Int      @id @default(autoincrement())
  dataPedido      DateTime
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  clienteCpf      String
  bibliotecarioId Int
  livrosId        Int
  codEmprestimo   Int

  livro         Livro         @relation(fields: [livrosId], references: [id])
  cliente       Cliente       @relation(fields: [clienteCpf], references: [cpf])
  bibliotecario Bibliotecario @relation(fields: [bibliotecarioId], references: [id])

  @@map("emprestimos")
}

model Reserva {
  id              Int      @id @default(autoincrement())
  dataPedido      DateTime
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  clienteCpf      String
  bibliotecarioId Int
  livrosId        Int
  codReserva      Int

  livro         Livro         @relation(fields: [livrosId], references: [id])
  cliente       Cliente       @relation(fields: [clienteCpf], references: [cpf])
  bibliotecario Bibliotecario @relation(fields: [bibliotecarioId], references: [id])

  @@map("reservas")
}
